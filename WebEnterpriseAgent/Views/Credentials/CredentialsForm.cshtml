@using Microsoft.AspNetCore.Components.Forms

@model CredentialFormModel

@{ var isSchemasEmpty = (Model.Schemas.Count() == 0) ? "true" : "false"; }
@{ var navBtnsState = (Model.Schemas.Count() == 0) ? "disabled" : ""; }


<ul class="nav nav-tabs mt-3" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="issue-tab" data-toggle="tab" href="#issue" role="tab" aria-controls="issue" aria-selected="true">Offer Credential</a>
    </li>
    <li class="nav-item ml-auto">
        <a class="nav-link " id="crdef-tab" data-toggle="tab" href="#crdef" role="tab" aria-controls="crdef" aria-selected="false">Register Cred. Definition</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="schema-tab" data-toggle="tab" href="#schema" role="tab" aria-controls="schema" aria-selected="false">Regsiter Schema</a>
    </li>
</ul>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade" id="schema" role="tabpanel" aria-labelledby="schema-tab">
        <form novalidate autocomplete="off" asp-controller="Credentials" asp-action="RegisterSchema">
            <div class="form-group">
                <label class="col-form-label" for="schemaNameInput">Schema Name</label>
                <input type="text" class="form-control" name="schemaName" id="schemaNameInput" aria-describedby="schemaNameHelp" placeholder="Name">
                <small id="schemaNameHelp" class="form-text text-muted">Please enter a unique name for the schema</small>
            </div>
            <div class="form-group">
                <label class="col-form-label" for="schemaVerInput">Schema Version</label>
                <input type="text" class="form-control" name="schemaVer" id="schemaVerInput" aria-describedby="schemaVerHelp" placeholder="Version">
                <small id="schemaVerHelp" class="form-text text-muted">Please enter a unique name for the schema</small>
            </div>
            <div class="form-group">
                <label class="col-form-label" for="shemaAttrsArea">Schema Attributes</label>
                <textarea class="form-control" name="schemaAttrs" id="shemaAttrsArea" aria-describedby="shemaAttrsHelp" rows="2"></textarea>
                <small id="shemaAttrsHelp" class="form-text text-muted">Provide a comma separated list of atrributes of the new schema. E.g: name, gender, age</small>
            </div>
            <input type="submit" class="btn btn-primary btn-block btn-w-loading" value="Register Schema" />                      
        </form>
    </div>
    <div class="tab-pane fade" id="crdef" role="tabpanel" aria-labelledby="crdef-tab">
        <form novalidate autocomplete="off" asp-controller="Credentials" asp-action="RegisterCredDefinition">
            <div class="form-group row">
                <div class="col">
                    <label class="col-form-label" for="SchemaIdSelect">Schema</label>
                    <select class="custom-select custom-select" name="SchemaId" id="SchemaIdSelect">
                        <option selected disabled value="">Select a Schema</option>
                        @foreach (var Schema in Model.Schemas)
                        {
                        <option value="@Schema.Id">@Schema.Name</option>
                        }
                    </select>
                </div>
                <div class="col-2 position-relative">
                    <button type="button" id="importSchemaBtn" class="btn btn-outline-info position-absolute" data-toggle="modal" data-target="#importSchemaModal" style="left: 0; bottom: 0;">Import</button>
                </div>
            </div>
            <div class="form-group">
                <label class="col-form-label" for="credDefTagInput">Cred. Definition Tag</label>
                <input type="text" class="form-control" name="credDefTag" id="credDefTagInput" aria-describedby="credDefTagInputHelp" placeholder="Tag">
                <small id="credDefTagInputHelp" class="form-text text-muted">Please enter a unique tag for the credential definition</small>
            </div>
            <input type="submit" id="registerCredDefBtn" class="btn btn-primary btn-block btn-w-loading" value="Register Credential Definition" />                            
        </form>
        <div class="modal fade" id="importSchemaModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="imoprtSchemaModalTitile">Import Schema to Wallet</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="importSchema-schema-id" class="col-form-label">Schema ID:</label>
                            <input type="text" class="form-control" id="importSchema-schema-id">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Import</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade show active my-3" id="issue" role="tabpanel" aria-labelledby="issue-tab">
        @*@if (Model.Schemas.Count() == 0) {
            <a class="btn btn-primary mt-3" role="button" asp-controller="Credentials" asp-action="BootstrapSchemaAndCredDef">Register Degree Schema</a>
            } else {*@

        <form novalidate autocomplete="off" asp-controller="Credentials" asp-action="IssueCredentials">
            <div class="form-group">
                <select class="custom-select mb-3" name="ConnectionId">
                    <option selected disabled value="">Select a Connection</option>
                    @foreach (var Connection in Model.Connections)
                    {
                        if (Connection.State == ConnectionState.Connected) {
                    <option value="@Connection.Id">@Connection.Alias.Name</option>
                        }
                    }
                </select>
            </div>
            @*<div class="form-group">
                    <select class="custom-select mb-3" name="SchemaId" id="SchemaIdSelectIssueTab">
                        <option selected disabled value="">Select a Schema</option>
                        @foreach (var Schema in Model.Schemas)
                        {
                        <option value="@Schema.Id">@Schema.Name</option>
                        }
                    </select>
                </div>*@

            <div class="form-group">
                <select class="custom-select mb-3" name="CredentialDefinitionId" id="credDefSelect">
                    <option selected disabled value="">Select a CredentialDefinition</option>
                    @foreach (var CredentialDefinition in Model.CredentialDefinitions)
                    {
                    <option value="@CredentialDefinition.Id">@CredentialDefinition.Id</option>
                    }
                </select>
            </div>

            @*<div class="form-group">
                    <label class="col-form-label" for="CredentialAttributes">Add credential attributes in JSON array format:</label>
                    <textarea class="form-control" id="CredentialAttributes" name="CredentialAttributes"
                              cols="30" rows="10"></textarea>
                </div>*@
            <div class="card mb-3">
                <div class="card-header">Credential</div>
                <div class="card-body" id="credentialAttrsCard">
                    <div class="form-group row">
                        Please select schema to see the attributes!
                    </div>
                </div>
            </div>
            <input type="submit" class="btn btn-primary btn-block btn-w-loading" value="Offer Credential" />                            
        </form>

    </div>
</div>

<div id="credentialAttrsTemplate" hidden>
    <div class="form-group row">
        <div class="col-3">
            <label class="col-form-label">ATTR_NAME</label>
        </div>
        <div class="col">
            <input type="text" class="form-control" name="CredentialAttributes[ATTR_INDEX].Value" placeholder="ATTR_NAME">
            <input type="text" hidden class="form-control" name="CredentialAttributes[ATTR_INDEX].Name" value="ATTR_NAME">
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        //function val() {
        //    var d = document.getElementById("SchemaIdSelectIssueTab").value;
        //document.getElementById("CredentialAttributes").textContent = ;
        //}
        $(function () {
            var attribTemplate = $("#credentialAttrsTemplate");
            $("#credDefSelect").change(function () {
                var template = attribTemplate.clone(false);
                var selectedItem = $(this).val();
                var attribArea = $("#CredentialAttributes");
                var json = "";
                var res = "";
                //var statesProgress = $("#states-loading-progress");
                //statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("OnCredDefSelected", "Credentials"))",
                    data: { "credDefId": selectedItem},
                    success: function (data) {
                        $.each(data, function (index, attr) {
                            //json = (index == data.length - 1) ?
                              //  json + `\t{'name': '${attr}', 'value': '' }\n` :
                            //json + `\t{'name': '${attr}', 'value': '' },\n`;
                            res = res + template.html()
                                .replace(/ATTR_NAME/g, attr)
                                .replace(/ATTR_INDEX/g, index);
                        });
                        //attribArea.val("[\n"+json+"]");
                        $("#credentialAttrsCard").empty();
                        $("#credentialAttrsCard").append(res);
                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert('Failed to build attributes json.');
                    }
                });
            });
        });
    </script>
}
